openapi: 3.0.0
info:
  title: Orders API
  version: 1.0.0
paths:
  /orders:
    get:
      summary: Retrieve all orders
      tags: [Orders]
      responses:
        200:
          description: A list of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      summary: Create a new order
      tags: [Orders]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        201:
          description: The created order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /orders/{id}:
    get:
      summary: Retrieve an order by ID
      tags: [Orders]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: A single order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        404:
          description: Order not found
    put:
      summary: Update an existing order
      tags: [Orders]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        200:
          description: The updated order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        404:
          description: Order not found
    delete:
      summary: Delete an order by ID
      tags: [Orders]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Order deleted successfully
        404:
          description: Order not found
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
          example: 1
        product:
          type: string
          example: "Product Name"
        quantity:
          type: integer
          example: 10
        total:
          type: number
          format: float
          example: 99.99
        status:
          type: string
          enum: [pending, completed, cancelled]
          example: "pending"
